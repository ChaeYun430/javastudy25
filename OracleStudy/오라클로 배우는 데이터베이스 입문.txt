1. 데이터 관리
- 데이터: 어떤 필요에 의해 수집했지만 아직 특정 목적을 위해 평가하거나 정제하지 않은 값이나 사실 또는 자료 자체
- 정보: 수집한 데이터를 어떤 목적을 위해 분석하거나 가공하여, 가치를 추가하거나 새로운 의미를 이끌어 낼 수 있는 결과
- 효율적인 데이터 관리를 위한 조건
    - 데이터를 통합하여 관리
    - 일관된 방법으로 관리
    - 데이터 누락 및 중복 제거
    - 여러 사용자(응용 프로그램 포함)가 공동으로 실시간 사용 가능
- 파일 시스템을 이용한 데이터 관리
    - 단층 파일 구조(flat file structure)
    - 서로 다른 여러 응용 프로그램이 제공하는 기능에 밪게 필요한 데이터를 각각 저장하고 관리
- DBMS를 통한 데이터 관리
    - DBMS: Database Management System
    - 데이터베이스의 데이터 조작과 관리를 극대화한 시스템 소프트웨어
    - 응용 프로그랜이 필요한 데이터 작업을 DBMS에 요청하면, DBMS는 자신이 관리하는 데이터 베이스로 관련 작업을 수행하고 결과값을 제공한다.
    - 작업 영역의 분리는 응용 프로그램의 서비스 제공과 데이터 관련 작업 효율을 높인다.
    - 여러 응용 프로그램이 하나의 통합된 데이터를 같은 방식으로 사용, 관리할 수 있으므로 데이터 누락이나 중복을 방지할 수 있다.
    - 응용 프로그램과는 별도로 데이터가 DBMS에 의해 관리, 보관되기 때문에 응용 프로그램의 업데이트 또는 변경과 관계없이 데이터를 사용할 수 있음.

2. 데이터 모델
- 컴퓨터에 데이터를 저장하는 방식을 정의해 놓은 개념 모형
- 계층형
    - 상위 개념과 하위 개념 포함
    - 일대다 구조의 데이터를 표현하기에는 알맞지만 자식 개체가 여러 부모를 가진 관계는 표현할 수 없다.
- 네트워크형
    - 망형, 그래프 구조를 기반으로 한다.
        - 수학에서 그래프는 일련의 꼭짓점들과 그 사이를 잇는 변들로 구성된 조합론적 구조이다.
    - 개체 간의 관계를 그래프 구조로 연결하므로 자식 개체가 여러 부모를 가질 수 있다.
- 관계형
    - 각 데이터의 독립 특성만을 규정하여 데이터 묶음(개체 집합)을 나누고,
        
        중복이 발생할 수 있는 데이터는 별개의 릴레이션으로 정의한 후 
        
        이를 식별하는 코드를 포함하여 상위 정보 데이터와 하위 정보 데이터를 연결한다. 
        
    - 개체: 데이터베이스에서 데이터화 하려는 사물, 개념의 정보 단위
        - 테이블(릴레이션)
    - 속성: 개체를 구성하는 데이터의 가장 작은 논리적 단위로서 데이터의 종류, 특성, 상태 등을 정의
        - 열
    - 관계: 개체와 개체 또는 속성 간의 연관성을 나타내기 위해 사용
        - 외래키로 구현하여 사용
- 객체 지향형
    - 데이터를 독립된 개체로 구성하고 관리하며 상속, 오버라이드 등 객체 지향 프로그래밍에 사용되는 강력한 기능을 활용할 수 있다.
    
3. SQL(Structured Query Language)
- RDBMS에서 데이터를 다루고 관리하는 데 사용하는 데이터베이스 질의 언어
- DQL(Data Query Language)
    - RDBMS에 저장한 데이터를 원하는 방식으로 조회하는 명령어
- DML(Data Manipulation Language)
    - RDBMS 내 테이블의 데이터를 저장, 수정, 삭제하는 명령어
- DDL(Data Definition Language)
    - RDBMS 내 데이터 관리를 위해 테이블 포함한 여러 객체를 생성, 수정, 삭제하는 명령어
- TCL(Transaction Control Language)
    - 트랜재션 데이터의 영구 저장, 취소 등과 관련된 명령어
- DCL(Data Control Language)
    - 데이터 사용 권한과 관련된 명령어
    
4. 관계형 데이터 베이스
- 테이블(관계): 표 형태의 저장공간
    - 여기서 관계는 행과 열의 특성에 맞추어 데이터를 저장한 테이블 하나하나를 의미한다.
- 행(튜플, 레코드): 저장하려는 하나의 개체를 구성하는 여러 값을 가로로 늘어뜨린 형태
- 열(속성, 필드): 저장하려는 데이터를 대표하는 이름과 공통 특성을 정의
    
    저장 정보의 종류(자료형)과 저장 조건과 범위 지정 가능
    
- 키: 하나의 테이블을 구성하는 여러 열 중에서 특별한 의미를 지닌 하나 또는 여러 열의 조합
    - 테이블 행을 구분하기 위해, 여러 테이블 간의 관계를 정의하기 위해 사용한다.
- 기본키
    - 테이블에 저장된 행을 식별할 수 있는 유일한 값이어야 한다.
    - 값의 중복이 없어야 한다.
    - NULL 값을 가질 수 없다.
    - 대부분의 경우 개인정보 노출이 가장 적은 정보를 선정한다.
    - 대부분의 프로그램은 가입 회원을 관리하기 위해 회원번호 같은 특수한 데이터를 따로 정의하여 관리한다. 내부 관리 목적으로만 사용하므로 일반적으로 사용자에게 공개하지 않는다.
    - 보조키(대체키): 후보키 중에서 기본키로 지정되지 않은 열
- 외래키(외부키)
    - 특정 테이블에 포함되어 있으면서 다른 테이블의 기본키로 지정된 키
    - A정보 테이블은 특정 열(외래키)의 데이터를 참조하여 B정보 테이블의 세부정보를 찾아갈 수 있다.
    - 엑셀처럼 여러행에 걸쳐 특정 열을 병합하는 것이 기본적으로 불가능하다.
    - 테이블 사이의 관계에서 개념적으로 외래키가 필수인 상황일지라도 응용 프로그램 제작의 효율 및 편의를 위해 외래키를 따로 정의하지 않고, 테이블 사이의 관계를 느슨하게 설계하여 이를 응용 프로그램 영역에서 처리하는 경우도 종종 발생한다.
- 복합키
    - 여러 열을 조합하여 기본키 역할을 할 수 있게 만든 키
- 슈퍼키: 행 식별 가능한 키의 모든 조합

5. 자료형
- 테이블을 구성하는 열에 지정한다.
- 스칼라형: 하나의 자료형에 맞춰 한 종류의 데이터를 저장할 수 있는 자료형
- 컬렉션형: 한 번에 여러 데이터를 저장할 수 있는 자료형(VARRY, NESTED, TABLE)
- **VARCHAR2**
    - 400byte만큼의 가변 길이 문자열 데이터를 저장할 수 있다.(최소 크기는 1byte)
- **NUMBER(전체 자릿수, 소수점 이하 자릿수)**
    - +— 38자릿수의 숫자를 저장할 수 있다.
    - NUMBER(p, s)와 같이 표기할 경우 s자리만큼 소수점 이하 자릿수를 표현하고, 이 소수점 자리를 포함한 전체 p자리만큼 숫자 데이터를 저장한다.
- **DATE**
    - 날짜 형식을 저장하기 위해 사용하는 자료형으로 세기, 연, 월, 일, 시, 분, 초 저장이 가능하다.
- CHAR(길이)
    - 4000byte만큼의 고정 길이 문자열 데이터를 저장할 수 있다. (최소 크기는 1byte)
- NVARCHAR2(길이)
    - 4000byte만큼의 가변 길이 국가별 문자 세트 데이터를 저장할 수 있다. (최소 크기는 1byte)
- BLOB
    - 최대 크기 4GB의 대용량 이진 데이터를 저장할 수 있다.
- CLOB
    - 최대 크기 4GB의 대용량 텍스트 데이터를 저장할 수 있다.
- BFILE
    - 최대 크기 4GB의 대용량 이진 데이터 파일을 저장할 수 있다.
    
6.  객체
- 오라클 데이터베이스 내에서 데이터를 저장하고 관리하기 위한 논리 구조를 가진 구성요소
- 테이블(table)
    - 데이터를 저장하는 저장소
- 인덱스(index)
    - 테이블의 검색 효율을 높이기 위해 사용
- 뷰(view)
    - 하나 또는 여러 개의 선별된 데이터를 논리적으로 연결하여 하나의 테이블처럼 사용하게 해 줌
- 시퀀스(squence)
    - 일련번호를 생성해 줌
- 시노님(synonym)
    - 오라클 객체의 별칭을 지정함
- 프로시져(procedure)
    - 프로그래밍 연산 및 기능 수행이 가능함(반환값 없음)
- 함수(fuction)
    - 프로그래밍 연산 및 기능 수행이 가능함(반환값 있음)
- 패키지(package)
    - 관련 있는 프로시져와 함수를 보관함
- 트리거(trigger)
    - 데이터 관련 작업의 연결 및 방지 관련 기능을 제공함
    - ex) 기록 복구

7. PL/SQL(Procedural Language extension to SQL)
- 변수, 조건문, 반복문 등 프로그래밍 언어에서 제공하는 요소를 사용하여 데이터를 관리할 수 있다.